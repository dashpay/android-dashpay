plugins {
    id 'maven-publish'
    id 'kotlin'
    id 'maven'
    id 'signing'
    id 'java'
}

group 'org.dashj.platform'

repositories {
    mavenLocal()
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
    mavenCentral()
}

dependencies {
    implementation project(':platform-core')
    implementation project(':dashpay')
    implementation 'com.google.guava:guava:28.2-android'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.dashj.platform:dpp:$dpp_version"
    implementation "org.dashj.platform:dapi-client:$dapi_client_version"
    implementation "org.dashj:dashj-core:$dashj_version"
    implementation "org.dashj:dashj-bls:1.0.0"
    implementation "org.dashj:dashj-merk:0.22-SNAPSHOT"
    implementation 'org.slf4j:slf4j-jdk14:1.7.28'
    implementation 'io.grpc:grpc-okhttp:1.28.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-protobuf-lite:1.28.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-stub:1.28.0' // CURRENT_GRPC_VERSION
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    implementation 'org.json:json:20190722'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaExec) {
    systemProperty "java.library.path", "platform-core/src/main/jniLibs"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.hasProperty('ossrhUsername')?project.findProperty('ossrhUsername'):'', password: project.hasProperty('ossrhPassword')?project.findProperty('ossrhPassword'):'')
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.hasProperty('ossrhUsername')?project.findProperty('ossrhUsername'):'', password: project.hasProperty('ossrhPassword')?project.findProperty('ossrhPassword'):'')
            }

            pom.project {
                name 'Dash Platform Examples'
                packaging 'jar'
                groupId 'org.dashj.platform'
                artifactId 'examples'
                version dashpay_version
                description 'Dash Platform Examples'
                url 'https://github.com/dashevo/android-dashpay'

                scm {
                    connection 'scm:svn:https://github.com/dashevo/android-dashpay'
                    developerConnection 'scm:svn:https://github.com/dashevo/android-dashpay'
                    url 'https://github.com/dashevo/android-dashpay'
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'hashengineering'
                        name 'HashEngineering'
                        email 'hashengineeringsolutions@gmail.com'
                    }
                }
            }
        }
    }
}