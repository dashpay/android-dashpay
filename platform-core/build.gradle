plugins {
    id 'maven-publish'
    id 'kotlin'
    id 'maven'
    id 'signing'
    id 'java'
}

version dashpay_version

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.dashj.platform:dpp:$dpp_version"
    implementation "org.dashj.platform:dapi-client:$dapi_client_version"
    implementation "org.dashj:dashj-core:$dashj_version"

    implementation 'io.grpc:grpc-okhttp:1.28.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-protobuf-lite:1.28.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-stub:1.28.0' // CURRENT_GRPC_VERSION

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'
    testImplementation 'org.slf4j:slf4j-jdk14:1.7.30'
    implementation 'org.slf4j:slf4j-api:1.7.30'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    tasks.withType(Sign)*.enabled = false
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

tasks.withType(Test) {
    systemProperty "java.library.path", "platform-core/src/main/jniLibs"
}

test {
    useJUnitPlatform()
}

assemble.dependsOn(publishToMavenLocal)

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.hasProperty('ossrhUsername')?project.findProperty('ossrhUsername'):'', password: project.hasProperty('ossrhPassword')?project.findProperty('ossrhPassword'):'')
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.hasProperty('ossrhUsername')?project.findProperty('ossrhUsername'):'', password: project.hasProperty('ossrhPassword')?project.findProperty('ossrhPassword'):'')
            }

            pom.project {
                name 'DashJ SDK'
                packaging 'jar'
                groupId 'org.dashj.platform'
                artifactId 'platform-core'
                version dashpay_version
                description 'Dash Java SDK Library'
                url 'https://github.com/dashevo/android-dashpay'

                scm {
                    connection 'scm:svn:https://github.com/dashevo/android-dashpay'
                    developerConnection 'scm:svn:https://github.com/dashevo/android-dashpay'
                    url 'https://github.com/dashevo/android-dashpay'
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'hashengineering'
                        name 'HashEngineering'
                        email 'hashengineeringsolutions@gmail.com'
                    }
                }
            }
        }
    }
}